<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://johncxsong.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://johncxsong.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-10-28T14:30:49+00:00</updated><id>https://johncxsong.github.io/feed.xml</id><title type="html">blank</title><subtitle>Welcome to John Song world! </subtitle><entry><title type="html">CUDA 8.0 Setup</title><link href="https://johncxsong.github.io/blog/2024/CUDA8/" rel="alternate" type="text/html" title="CUDA 8.0 Setup"/><published>2024-09-10T21:01:00+00:00</published><updated>2024-09-10T21:01:00+00:00</updated><id>https://johncxsong.github.io/blog/2024/CUDA8</id><content type="html" xml:base="https://johncxsong.github.io/blog/2024/CUDA8/"><![CDATA[<blockquote> <p><strong>TensorFlow 1.15</strong> works with <strong>CUDA 10.0</strong> and <strong>cuDNN 7.4</strong> <br/> <strong>TensorFlow 1.4</strong> works with <strong>CUDA 8.0</strong> and <strong>cuDNN 6</strong>.</p> </blockquote> <p><code class="language-plaintext highlighter-rouge">If you have tensorflow 2.xx , Cuda &gt; 11.0 </code></p> <h1 id="windows-10-os">Windows 10 OS</h1> <h3 id="cuda-toolkits">CUDA Toolkits</h3> <p><strong>cuda 8.0 downloading</strong> <a href="https://developer.nvidia.com/cuda-80-ga2-download-archive">https://developer.nvidia.com/cuda-80-ga2-download-archive</a></p> <p><strong>Set environment</strong></p> <ul> <li>Go to Start and Search “environment variables”</li> <li>click the Environment Variables button</li> <li>Click on the Path system variable and select edit</li> <li>add the following paths <ul> <li>`C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\bin`</li> <li> `C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\libnvvp`</li> <li>`C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\extras\CUPTI\libx64`</li> </ul> </li> </ul> <p><strong>cudnn 6.0 downloading</strong> <a href="https://developer.nvidia.com/rdp/cudnn-archive">https://developer.nvidia.com/rdp/cudnn-archive</a></p> <ul> <li> <p>Looking for <a href="https://developer.nvidia.com/rdp/cudnn-archive#a-collapse6-8">Download cuDNN v6.0 (April 27, 2017), for CUDA 8.0</a></p> </li> <li> <p><strong>Extract the files</strong>: Once you’ve downloaded the cuDNN zip file, extract it.</p> </li> <li> <p><strong>Copy the files</strong>:</p> <ul> <li>Copy the contents of the extracted <code class="language-plaintext highlighter-rouge">cuda</code> folder to your <strong>CUDA installation</strong> directory. For example, if you have installed CUDA in the default directory (<code class="language-plaintext highlighter-rouge">C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0</code>), copy the following: <ul> <li>Copy <code class="language-plaintext highlighter-rouge">bin/cudnn*.dll</code> to <code class="language-plaintext highlighter-rouge">C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\bin</code>.</li> <li>Copy <code class="language-plaintext highlighter-rouge">include/cudnn*.h</code> to <code class="language-plaintext highlighter-rouge">C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include</code>.</li> <li>Copy <code class="language-plaintext highlighter-rouge">lib/x64/cudnn*.lib</code> to <code class="language-plaintext highlighter-rouge">C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\lib\x64</code></li> </ul> </li> </ul> </li> </ul> <h1 id="ubuntu-1604">Ubuntu 16.04</h1> <blockquote> <p>Please note: Ubuntu 22.04 is not comptabile with CUDA 8.0</p> </blockquote> <p><strong>Reference</strong> <a href="https://gist.github.com/Mahedi-61/7b1f737e328fe19f4063f08a009c82c4">https://gist.github.com/Mahedi-61/7b1f737e328fe19f4063f08a009c82c4</a></p>]]></content><author><name></name></author><category term="Computer_Science"/><category term="MachineLearning"/><category term="Coding"/><summary type="html"><![CDATA[walk through setup for CUDA 8.0 and tensorflow 1.xx]]></summary></entry><entry><title type="html">Prov-Gigapath Setup Tutorial</title><link href="https://johncxsong.github.io/blog/2024/Provgigapath/" rel="alternate" type="text/html" title="Prov-Gigapath Setup Tutorial"/><published>2024-07-15T21:01:00+00:00</published><updated>2024-07-15T21:01:00+00:00</updated><id>https://johncxsong.github.io/blog/2024/Provgigapath</id><content type="html" xml:base="https://johncxsong.github.io/blog/2024/Provgigapath/"><![CDATA[<div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/whole_slide_beginning.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div>]]></content><author><name></name></author><category term="Computer_Science"/><category term="MachineLearning"/><category term="Coding"/><summary type="html"><![CDATA[walk through setup for pretrain model]]></summary></entry><entry><title type="html">JAVA JDK8-Comparsion method violates its general contract</title><link href="https://johncxsong.github.io/blog/2023/Comparsion_method/" rel="alternate" type="text/html" title="JAVA JDK8-Comparsion method violates its general contract"/><published>2023-01-16T21:01:00+00:00</published><updated>2023-01-16T21:01:00+00:00</updated><id>https://johncxsong.github.io/blog/2023/Comparsion_method</id><content type="html" xml:base="https://johncxsong.github.io/blog/2023/Comparsion_method/"><![CDATA[<h2 id="solution-1">Solution 1</h2> <ul> <li>Add this code into <code class="language-plaintext highlighter-rouge">main()</code></li> </ul> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">System</span><span class="o">.</span><span class="na">setProperty</span><span class="o">(</span><span class="s">"java.util.Arrays.useLegacyMergeSort"</span><span class="o">,</span> <span class="s">"true"</span><span class="o">);</span>
</code></pre></div></div> <ul> <li>code as below.</li> </ul> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="c1">// TODO Auto-generated method stub</span>
        <span class="c1">//system properties---------------------------------------------------</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">setProperty</span><span class="o">(</span><span class="s">"java.util.Arrays.useLegacyMergeSort"</span><span class="o">,</span> <span class="s">"true"</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">fileName</span> <span class="o">=</span> <span class="s">"K2_flu_12062022_20230111_try_correct1.xdsl"</span><span class="o">;</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"try"</span> <span class="o">+</span> <span class="n">fileName</span><span class="o">);</span>
        <span class="n">runOne</span><span class="o">(</span><span class="n">fileName</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"finish!"</span><span class="o">);</span>

</code></pre></div></div> <p>This will use the old merge sort algorithm instead of TimSort. By using this algorithm, it could bypass the EXCEPTION.</p> <h2 id="solution-2">Solution 2</h2> <ul> <li>SepSetComparator need to be modified.</li> <li>Comparator must be transitive without a contradiction.</li> <li>Compare( ) should follow this rule (https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html)</li> <li>add this code to compare()</li> </ul> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="kd">public</span> <span class="kt">int</span> <span class="nf">compare</span><span class="o">(</span><span class="nc">Object</span> <span class="n">o1</span><span class="o">,</span> <span class="nc">Object</span> <span class="n">o2</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">SepSet</span> <span class="n">sepSet1</span> <span class="o">=</span> <span class="o">(</span><span class="nc">SepSet</span><span class="o">)</span> <span class="n">o1</span><span class="o">;</span>
        <span class="nc">SepSet</span> <span class="n">sepSet2</span> <span class="o">=</span> <span class="o">(</span><span class="nc">SepSet</span><span class="o">)</span> <span class="n">o2</span><span class="o">;</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">results1</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">2</span><span class="o">];</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">results2</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">2</span><span class="o">];</span>
        <span class="n">results1</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="o">-</span><span class="n">sepSet1</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
        <span class="n">results1</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">sepSet1</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">results1</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">results1</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">*</span> <span class="n">sepSet1</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">getStates</span><span class="o">().</span><span class="na">size</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="n">results2</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="o">-</span><span class="n">sepSet2</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
        <span class="n">results2</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">sepSet2</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">results2</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">results2</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">*</span> <span class="n">sepSet2</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">getStates</span><span class="o">().</span><span class="na">size</span><span class="o">();</span>
        <span class="o">}</span>
<span class="c1">// Here is the modifying part.-----------------------------------------------</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">results1</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">results2</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">||</span> <span class="n">results1</span><span class="o">[</span><span class="mi">1</span><span class="o">]&lt;=</span><span class="n">results2</span><span class="o">[</span><span class="mi">1</span><span class="o">])</span> <span class="o">{</span>
            <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
<span class="o">}</span>
        <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">results1</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">==</span> <span class="n">results2</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">||</span> <span class="n">results1</span><span class="o">[</span><span class="mi">1</span><span class="o">]&gt;</span><span class="n">results2</span><span class="o">[</span><span class="mi">1</span><span class="o">])</span> <span class="o">{</span>
            <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
<span class="o">}</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
<span class="o">}</span>
<span class="c1">//-------------------------------------------------------------------------</span>
<span class="o">}</span>
</code></pre></div></div> <h2 id="explanation">Explanation</h2> <h4 id="solution-1-1">Solution 1</h4> <ul> <li>bypass the exception by using LegacyMergeSort instead of TimSort. [TimSort replaced LegacyMergeSort after JDK 7].</li> <li>When do use this solution? If you are sure that your Compare() method is correct, use this solution.</li> </ul> <h4 id="solution-2-1">Solution 2</h4> <ul> <li>usually when this exception occur, the comprare method may have not include all conditions.</li> <li>Since orignal code is</li> </ul> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c1">// Here is the original part.-----------------------------------------------</span>
<span class="k">if</span> <span class="o">(</span><span class="n">results1</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">results2</span><span class="o">[</span><span class="mi">0</span><span class="o">])</span> <span class="o">{</span><span class="k">return</span> <span class="o">-</span><span class="mi">2</span><span class="o">;}</span>
<span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">results1</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">==</span> <span class="n">results2</span><span class="o">[</span><span class="mi">0</span><span class="o">])</span> <span class="o">{</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">results1</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">&lt;=</span> <span class="n">results2</span><span class="o">[</span><span class="mi">1</span><span class="o">])</span> <span class="o">{</span>
        <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
<span class="k">return</span> <span class="mi">0</span><span class="o">;</span> <span class="o">}</span>
<span class="o">}</span>
<span class="k">else</span> <span class="o">{</span>
    <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
<span class="o">}</span>

</code></pre></div></div> <p>Since compare method only return three value: -1,0,1</p> <p>if you want <code class="language-plaintext highlighter-rouge">results1[1]&lt;=results2[1] return -1</code>. My suggestion is to write this situation together. Thus,</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="o">(</span><span class="n">results1</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">results2</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">||</span> <span class="n">results1</span><span class="o">[</span><span class="mi">1</span><span class="o">]&lt;=</span><span class="n">results2</span><span class="o">[</span><span class="mi">1</span><span class="o">])</span> <span class="o">{</span>
        <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div> <p>After add this, we still need to consider results1[1]&gt;results2[1] this situation. Thus,</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">results1</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">==</span> <span class="n">results2</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">||</span> <span class="n">results1</span><span class="o">[</span><span class="mi">1</span><span class="o">]&gt;</span><span class="n">results2</span><span class="o">[</span><span class="mi">1</span><span class="o">])</span> <span class="o">{</span>
    <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div> <p>else return 1</p> <p>Finally, we include all three situation where comparing the list of reuslts1 and reuslts2. The main method should run without exception.</p> <h2 id="reference">Reference</h2> <p>java.util.TimSort<br/> Similar issue:</p> <ol> <li>https://bugs.java.com/bugdatabase/view_bug.do?bug_id=7193557</li> <li>https://bugs.java.com/bugdatabase/view_bug.do?bug_id=8234482</li> </ol> <p>Comparator:</p> <ol> <li>https://www.scaler.com/topics/java/comparable-and-comparator-in-java/</li> <li>https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html</li> </ol>]]></content><author><name></name></author><category term="Computer_Science"/><category term="Coding"/><summary type="html"><![CDATA[Comparsion method violates its general contract]]></summary></entry></feed>